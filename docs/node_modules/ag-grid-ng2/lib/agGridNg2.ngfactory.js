// ag-grid-ng2 v6.2.0
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('./agGridNg2');
var import4 = require('@angular/core/src/linker/query_list');
var import7 = require('@angular/core/src/linker/view_type');
var import8 = require('@angular/core/src/change_detection/change_detection');
var import9 = require('@angular/core/src/linker/element_ref');
var import10 = require('./ng2FrameworkFactory');
var import11 = require('@angular/core/src/metadata/view');
var import12 = require('@angular/core/src/linker/component_factory');
var renderType_AgGridNg2_Host = null;
var _View_AgGridNg2_Host0 = (function (_super) {
    __extends(_View_AgGridNg2_Host0, _super);
    function _View_AgGridNg2_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AgGridNg2_Host0, renderType_AgGridNg2_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_AgGridNg2_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ag-grid-ng2', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_AgGridNg20(this.viewUtils, this.injector(0), this._appEl_0);
        this._AgGridNg2_0_5 = new import3.AgGridNg2(new import9.ElementRef(this._el_0), this._appEl_0.vcRef, this.parentInjector.get(import10.Ng2FrameworkFactory));
        this._query_AgGridColumn_0_0 = new import4.QueryList();
        this._appEl_0.initComponent(this._AgGridNg2_0_5, [], compView_0);
        compView_0.create(this._AgGridNg2_0_5, this.projectableNodes, null);
        this.init([].concat([this._appEl_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_AgGridNg2_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.AgGridNg2) && (0 === requestNodeIndex))) {
            return this._AgGridNg2_0_5;
        }
        return notFoundResult;
    };
    _View_AgGridNg2_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._AgGridNg2_0_5.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_AgGridColumn_0_0.dirty) {
                this._query_AgGridColumn_0_0.reset([]);
                this._AgGridNg2_0_5.columns = this._query_AgGridColumn_0_0;
                this._query_AgGridColumn_0_0.notifyOnChanges();
            }
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._AgGridNg2_0_5.ngAfterViewInit();
            }
        }
    };
    _View_AgGridNg2_Host0.prototype.destroyInternal = function () {
        this._AgGridNg2_0_5.ngOnDestroy();
    };
    return _View_AgGridNg2_Host0;
}(import1.AppView));
function viewFactory_AgGridNg2_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AgGridNg2_Host === null)) {
        (renderType_AgGridNg2_Host = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, [], {}));
    }
    return new _View_AgGridNg2_Host0(viewUtils, parentInjector, declarationEl);
}
exports.AgGridNg2NgFactory = new import12.ComponentFactory('ag-grid-ng2', viewFactory_AgGridNg2_Host0, import3.AgGridNg2);
var styles_AgGridNg2 = [];
var renderType_AgGridNg2 = null;
var _View_AgGridNg20 = (function (_super) {
    __extends(_View_AgGridNg20, _super);
    function _View_AgGridNg20(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AgGridNg20, renderType_AgGridNg2, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_AgGridNg20.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this.init([], [], [], []);
        return null;
    };
    return _View_AgGridNg20;
}(import1.AppView));
function viewFactory_AgGridNg20(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AgGridNg2 === null)) {
        (renderType_AgGridNg2 = viewUtils.createRenderComponentType('', 0, import11.ViewEncapsulation.None, styles_AgGridNg2, {}));
    }
    return new _View_AgGridNg20(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_AgGridNg20 = viewFactory_AgGridNg20;
