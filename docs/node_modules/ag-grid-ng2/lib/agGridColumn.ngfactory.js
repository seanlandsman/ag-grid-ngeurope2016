// ag-grid-ng2 v6.2.0
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import1 = require('@angular/core/src/linker/view');
var import2 = require('@angular/core/src/linker/element');
var import3 = require('./agGridColumn');
var import4 = require('@angular/core/src/linker/query_list');
var import7 = require('@angular/core/src/linker/view_type');
var import8 = require('@angular/core/src/change_detection/change_detection');
var import9 = require('@angular/core/src/metadata/view');
var import10 = require('@angular/core/src/linker/component_factory');
var renderType_AgGridColumn_Host = null;
var _View_AgGridColumn_Host0 = (function (_super) {
    __extends(_View_AgGridColumn_Host0, _super);
    function _View_AgGridColumn_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AgGridColumn_Host0, renderType_AgGridColumn_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_AgGridColumn_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ag-grid-column', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_AgGridColumn0(this.viewUtils, this.injector(0), this._appEl_0);
        this._AgGridColumn_0_4 = new import3.AgGridColumn();
        this._query_AgGridColumn_0_0 = new import4.QueryList();
        this._appEl_0.initComponent(this._AgGridColumn_0_4, [], compView_0);
        compView_0.create(this._AgGridColumn_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_AgGridColumn_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.AgGridColumn) && (0 === requestNodeIndex))) {
            return this._AgGridColumn_0_4;
        }
        return notFoundResult;
    };
    _View_AgGridColumn_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._query_AgGridColumn_0_0.dirty) {
                this._query_AgGridColumn_0_0.reset([this._AgGridColumn_0_4]);
                this._AgGridColumn_0_4.childColumns = this._query_AgGridColumn_0_0;
                this._query_AgGridColumn_0_0.notifyOnChanges();
            }
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_AgGridColumn_Host0;
}(import1.AppView));
function viewFactory_AgGridColumn_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AgGridColumn_Host === null)) {
        (renderType_AgGridColumn_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_AgGridColumn_Host0(viewUtils, parentInjector, declarationEl);
}
exports.AgGridColumnNgFactory = new import10.ComponentFactory('ag-grid-column', viewFactory_AgGridColumn_Host0, import3.AgGridColumn);
var styles_AgGridColumn = [];
var renderType_AgGridColumn = null;
var _View_AgGridColumn0 = (function (_super) {
    __extends(_View_AgGridColumn0, _super);
    function _View_AgGridColumn0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_AgGridColumn0, renderType_AgGridColumn, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_AgGridColumn0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this.init([], [], [], []);
        return null;
    };
    return _View_AgGridColumn0;
}(import1.AppView));
function viewFactory_AgGridColumn0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_AgGridColumn === null)) {
        (renderType_AgGridColumn = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, styles_AgGridColumn, {}));
    }
    return new _View_AgGridColumn0(viewUtils, parentInjector, declarationEl);
}
exports.viewFactory_AgGridColumn0 = viewFactory_AgGridColumn0;
